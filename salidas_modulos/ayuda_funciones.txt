-----------------------------------------------
|Funcion|: abrir_archivos(lista)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe una lista y abre los archivos dentro de esta. Devuelve las rutas d
e los archivos en una lista]'

Funcion utilizada en el modulo:  'modulo_merge.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: buscar_autor(lista_comentarios)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe una lista con comentarios y devuelve el autor en caso de existir]'


Funcion utilizada en el modulo:  'generador_csv.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: buscar_ayuda(lista_comentarios)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe una lista de comentarios y devuleve la ayuda en caso de existir]'

Funcion utilizada en el modulo:  'generador_csv.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: buscar_due√±o(linea)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe una linea de comentarios.csv y devuelve el primer campo. Osea el a
utor.]'

Funcion utilizada en el modulo:  'panel_general_funciones.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: buscar_funcion(linea)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe una linea de comentarios.csv por parametro y devuelve el nombre de
 la funcion]'

Funcion utilizada en el modulo:  'informacion_desarrollador.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: buscar_funcion_modulo(linea)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe una linea de fuente_unico.csv por parametro y devuelve el nombre d
e la funcion, concatenado con el modulo al que pertenece]'

Funcion utilizada en el modulo:  'panel_general_funciones.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: calc_porcentaje(total_lineas, lineas_funcion)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe el total de lineas y las lineas por funcion. Devuelve el promedio.
]'

Funcion utilizada en el modulo:  'informacion_desarrollador.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: calc_total_lineas(dic_participacion)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe un diccionario anidado con claves(autores) y subclaves(nombres de 
funcion). Devuelve el acumulador del total de lineas.
Funcion utilizada en el modulo:  'informacion_desarrollador.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: carga_dic_invocaciones(fuente_unico, lista_funciones)

|INFORMACION|:
---------------
Autor: Miguel Lora
Ayuda: Recibe una linea de un archivo de fuente_unico abierto y una lista con to
das las funciones que hay. Devuelve un diccionario con clave: nombre de la funci
on y de valor una lista con las funciones que invoca.]'

Funcion utilizada en el modulo:  'arbol_invocacion.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: carga_dic_participacion(fuente_unico, comentarios)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe el archivo fuente_unico y comentarios.csv abierto, y devuelve un d
iccionario anidado de la sigiente forma: {dic = { "\'[Autor : Tomas Yu Nakasone]
\'": {\'capicuas\': 12,\'delete_repeated\': 7},] }. 
Funcion utilizada en el modulo:  'informacion_desarrollador.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: carga_lista_funciones(fuente_unico)

|INFORMACION|:
---------------
Autor: Fabiola Siles
Ayuda: Recibe una linea de un archivo de fuente_unico abierto y devuelve una lis
ta con las funciones que hay en ella.
Funcion utilizada en el modulo:  'analizador_reutilizacion_codigo.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: carga_lista_funciones(fuente_unico)

|INFORMACION|:
---------------
Autor: Miguel Lora
Ayuda: Recibe una linea de un archivo de fuente_unico abierto y devuelve una lis
ta con las funciones que hay en ella.]'

Funcion utilizada en el modulo:  'arbol_invocacion.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: cargar_dic_coment(key, autor, ayuda, otros)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe el nombre de la funcion, el autor, ayuda y comentarios extra, y lo
s agrega al diccionario de comentarios]'

Funcion utilizada en el modulo:  'generador_csv.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: cargar_matriz(dic_invoc_count, matriz)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe el diccionario de funcion y lista de tuplas(id_funcion, repeticion
es). Y tambien recibe una matriz ya creada con espacios vacios y con un ancho y 
largo correspondiente a la cantidad de funciones. Devuelve la matriz cargada con
 los datos del diccionario.
Funcion utilizada en el modulo:  'analizador_reutilizacion_codigo.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: caso_hashtag(fuente_unico, comentarios, funcion)

|INFORMACION|:
---------------
Autor: Miguel Lora
Ayuda: Recibe fuente_unico, comentarios y la funcion buscada por parametro. Impr
ime los datos solicitados por el enunciado.]'

Funcion utilizada en el modulo:  'consulta_funciones.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: caso_hashtag_todo(fuente_unico, comentarios)

|INFORMACION|:
---------------
Autor: Carlos Medina
Ayuda: recibe los archivos, fuente_unico y comentarios. Luego imprime todo lo re
lativo a la funcion, para cada una de las funciones mostradas por pantalla]'

Funcion utilizada en el modulo:  'consulta_funciones.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: caso_imprimir_todo(fuente_unico, comentarios, arch_salida)

|INFORMACION|:
---------------
Autor: Carlos Medina
Ayuda: Recibe fuente_unico, comentarios y un archivo de salida previamente abier
tos. Escribe en el archivo de salida los datos solicitados por el enunciado haci
endo uso de la funcion "escribir-salida"]'

Funcion utilizada en el modulo:  'consulta_funciones.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: caso_pregunta(fuente_unico, comentarios, funcion)

|INFORMACION|:
---------------
Autor: Carlos Medina
Ayuda: recibe los archivos, fuente_unico y comentarios y la funcion elegida por 
el usuario, luego imprime el autor, la ayuda, los parametros y el modulo de la f
uncion buscada]'

Funcion utilizada en el modulo:  'consulta_funciones.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: caso_pregunta_todo(fuente_unico, comentarios)

|INFORMACION|:
---------------
Autor: Carlos Medina
Sin ayuda o descripcion.
Funcion utilizada en el modulo:  'consulta_funciones.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: cerrar_archivos(lista)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe una lista con las rutas de los archivos a cerrar y los cierra]'

Funcion utilizada en el modulo:  'modulo_merge.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: conseguir_funcion(palabra)

|INFORMACION|:
---------------
Autor: Carlos Medina
Ayuda: Recibe una palabra y devuelve la misma palabra separada por el caracter e
special
Funcion utilizada en el modulo:  'consulta_funciones.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: cont_lineas_codigo(linea)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe una linea de un archivo de fuente_unico abierto y devuelve la cant
idad de lineas de codigo que hay en la funcion de esa linea.
Funcion utilizada en el modulo:  'panel_general_funciones.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: contador_lineas(linea)

|INFORMACION|:
---------------
Autor: Miguel Lora
Ayuda: Recibe una linea de un archivo de fuente_unico abierto y devuelve la cant
idad de lineas de codigo que hay en la funcion de esa linea.
Funcion utilizada en el modulo:  'arbol_invocacion.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: count_comentarios(linea)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Sin ayuda o descripcion.
Funcion utilizada en el modulo:  'panel_general_funciones.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: count_ifs(linea)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe una linea de un archivo de fuente_unico abierto y devuelve la cant
idad de ifs/elifs.
Funcion utilizada en el modulo:  'panel_general_funciones.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: count_invocaciones(fuente_unico)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe una linea de un archivo de fuente_unico.csv abierto y devuelve un 
diccionario que tiene registrado la cantidad de invocaciones de cada funcion.
Funcion utilizada en el modulo:  'panel_general_funciones.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: count_lineas_codigo(linea)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe una linea de un archivo de fuente_unico abierto y devuelve la cant
idad de lineas de codigo que hay en la funcion de esa linea.
Funcion utilizada en el modulo:  'informacion_desarrollador.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: count_palabra(linea, palabra_buscada)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe una linea de un archivo de fuente_unico abierto y un string el cua
l es la palabra a buscar en la linea. Devuelve la cantidad de apariciones de la 
palabra buscada.
Funcion utilizada en el modulo:  'panel_general_funciones.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: count_parametros(linea)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe una linea de un archivo de fuente_unico abierto y devuelve la cant
idad de paramtros que recibe la funcion.]'

Funcion utilizada en el modulo:  'panel_general_funciones.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: crear_comentarios_csv(linea, codigo, l_com)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe una linea, codigo que es un archivo abierto y una lista a la que s
e le van agregando paths de los modulos con comentarios (que luego se usara para
 el merge). Realiza la linea de ejecucion a fin de crear los comentarios.csv
Funcion utilizada en el modulo:  'generador_csv.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: crear_funciones_csv(linea, codigo, l_fun)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe una linea, codigo que es un archivo abierto y una lista a la que s
e le van agregando paths de los modulos con funciones (que luego se usara para e
l merge). Realiza la linea de ejecucion a fin de crear los funciones.csv
Funcion utilizada en el modulo:  'generador_csv.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: crear_lista_codigo(linea)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe una linea de un archivo de fuente_unico abierto y devuelve una lis
ta con la seccion de las lineas de codigo como campos.
Funcion utilizada en el modulo:  'panel_general_funciones.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: crear_matriz(ancho, alto)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe el ancho y el alto de la matriz a generar. Crea una matriz de w, h
 de altura y ancho. La lleno con espacios vacios.]'

Funcion utilizada en el modulo:  'analizador_reutilizacion_codigo.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: due√±o(linea)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe una linea de un archivo de comentarios.csv o fuente_unico.csv abie
rto y devuelve el primer campo. Osea el autor.]'

Funcion utilizada en el modulo:  'informacion_desarrollador.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: enc_extra_descripcion(linea)

|INFORMACION|:
---------------
Autor: Carlos Medina
Sin ayuda o descripcion.
Funcion utilizada en el modulo:  'consulta_funciones.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: encontrar_autor(linea)

|INFORMACION|:
---------------
Autor: Carlos Medina
Ayuda: recibe una linea de un archivo. La convierte a una lista separada por com
as y devuelve el segundo elemento que corresponde al autor de la funcion]'

Funcion utilizada en el modulo:  'consulta_funciones.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: encontrar_descripcion(linea)

|INFORMACION|:
---------------
Autor: Carlos Medina
Ayuda: recibe una linea de un archivo. La convierte a una lista separada por com
as y devuelve la ayuda de la funcion]'

Funcion utilizada en el modulo:  'consulta_funciones.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: encontrar_funcion(linea)

|INFORMACION|:
---------------
Autor: Carlos Medina
Ayuda: recibe una linea de un archivo. La convierte a una lista separada por com
as y devuelve el primer elemento que corresponde al nombre de la funcion]'

Funcion utilizada en el modulo:  'consulta_funciones.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: encontrar_llave_param(linea)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe una linea y retorna el nombre de la funcion y parametros]'

Funcion utilizada en el modulo:  'generador_csv.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: encontrar_modulo(linea)

|INFORMACION|:
---------------
Autor: Carlos Medina
Ayuda: recibe una linea de un archivo. La convierte a una lista separada por com
as y devuelve el modulo de la funcion]'

Funcion utilizada en el modulo:  'consulta_funciones.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: encontrar_param(linea)

|INFORMACION|:
---------------
Autor: Carlos Medina
Ayuda: recibe una linea de un archivo. La convierte a una lista separada por com
as y devuelve el segundo elemento que corresponde a los parametros de la funcion
]'

Funcion utilizada en el modulo:  'consulta_funciones.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: escribir_analizador(tama√±o, dic_funcion_id, matriz, ultima_fila, sal
ida)

|INFORMACION|:
---------------
Autor: Fabiola Siles
Ayuda: Recibe el tama√±o (cantidad de funciones), diccionario funcion_id, la mat
riz cargada con todos los datos, la ultima fila a agregar y el archivo de salida
. Realiza el proceso de ejecucion para generar analizador.txt.]'

Funcion utilizada en el modulo:  'analizador_reutilizacion_codigo.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: escribir_arch_salida(salida, funcion, parametros, autor, descripcion,
 modulo)

|INFORMACION|:
---------------
Autor: Fabiola Siles
Ayuda: Recibe por parametros los datos a escribir en el archivo de salida. Devue
lve un txt ubicado en salidas_modulos con todos los datos.
Funcion utilizada en el modulo:  'consulta_funciones.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: escribir_cabecera(salida, tama√±o)

|INFORMACION|:
---------------
Autor: Fabiola Siles
Ayuda: Recibe la salida y el tama√±o (cantidad de funciones). Escribe la cabecer
a en el analizador.txt.]'

Funcion utilizada en el modulo:  'analizador_reutilizacion_codigo.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: escribir_cuerpo(salida, dic_funcion_id, tama√±o, matriz)

|INFORMACION|:
---------------
Autor: Fabiola Siles
Ayuda: Recibe el diccionario funcion_id, el tama√±o (cantidad de funciones) y la
 matriz cargada con todos los datos. Escribe en el analizador.txt el cuerpo.]'

Funcion utilizada en el modulo:  'analizador_reutilizacion_codigo.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: escribir_info_desarrollador(arch_salida, total_lineas, dic_participac
ion)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe el archivo de salida, el total de lineas en todo el codigo y un di
ccionario(cargado mediante la funcion carga_dic_part). Escribe los datos del dic
cionario en el archivo de salida.]'

Funcion utilizada en el modulo:  'informacion_desarrollador.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: escribir_panel_general(arch_salida, funcion, parametros, lineas, invo
caciones, returns, ifs, fors, whiles, breaks, exits, coments, ayudas, autores)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Escribe y genera un archivo de salida. Recibe en el primer parametro el a
rchivo de salida y en el resto de los parametros, los valores de lo que hay que 
escribir.]'

Funcion utilizada en el modulo:  'panel_general_funciones.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: escribir_registros(archivo, diccionario)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe un archivo abierto(en donde escribir) y un diccionario. Escribe el
 dic en el archivo.]'

Funcion utilizada en el modulo:  'generador_csv.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: escribir_ultima_fila(salida, ultima_fila, tama√±o)

|INFORMACION|:
---------------
Autor: Fabiola Siles
Ayuda: Recibe la ultima fila a escribir y el tama√±o (cantidad de funciones). Es
cribe en el analizador.txt la ultima linea.]'

Funcion utilizada en el modulo:  'analizador_reutilizacion_codigo.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: gen_dic_funcion_id(lista_funciones)

|INFORMACION|:
---------------
Autor: Fabiola Siles
Ayuda: Recibe la lista de funciones y la hace diccionario, asignandole como key 
la funcion/nombre y de valor su orden (id).]'

Funcion utilizada en el modulo:  'analizador_reutilizacion_codigo.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: gen_dic_inv_x(fuente_unico, lista_funciones, dic_funcion_id)

|INFORMACION|:
---------------
Autor: Fabiola Siles
Ayuda: Recibe una linea de un archivo de fuente_unico abierto y una lista con to
das las funciones que hay. Devuelve un diccionario con clave: nombre de la funci
on y de valor una lista con los ID de las funciones a las que llama (PUEDE HABER
 IDS REPETIDAS).
Funcion utilizada en el modulo:  'analizador_reutilizacion_codigo.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: gen_dic_invoc_count(fuente_unico, lista_funciones, dic_funcion_id, di
c_inv_x)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe una linea de un archivo de fuente_unico abierto y una lista con to
das las funciones que hay. Devuelve un diccionario con clave: nombre de la funci
on y de valor una lista de tuplas de este estilo. "funcion" : [(id funcion, repe
ticiones ), (..., ...)].
Funcion utilizada en el modulo:  'analizador_reutilizacion_codigo.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: gen_lista_linea_codigo(linea)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe una linea de un archivo de fuente_unico abierto y devuelve una lis
ta con la seccion de las lineas de codigo como campos.
Funcion utilizada en el modulo:  'informacion_desarrollador.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: gen_lista_lineas(linea)

|INFORMACION|:
---------------
Autor: Miguel Lora
Ayuda: Recibe una linea de un archivo de fuente_unico abierto y devuelve una lis
ta con la seccion de las lineas de codigo como campos.
Funcion utilizada en el modulo:  'arbol_invocacion.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: gen_ultima_fila(matriz)

|INFORMACION|:
---------------
Autor: Fabiola Siles
Ayuda: Recibe una matriz con solo numeros(int) y calcula la sumatoria de sus col
umnas, generando una lista con los resultados de cada columna.
Funcion utilizada en el modulo:  'analizador_reutilizacion_codigo.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: generar_dict_comentarios(codigo)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe un archivo abierto con codigo y genera un diccionario con solo com
entarios, cuyas claves seran los nombres de las funciones.
Funcion utilizada en el modulo:  'generador_csv.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: generar_dict_funciones(codigo)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe un archivo abierto con codigo y genera un diccionario con solo cod
igo, cuyas claves seran los nombres de las funciones
Funcion utilizada en el modulo:  'generador_csv.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: guardar(arch, nom_funcion, extras)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe un archivo abierto en el cual va a escribir (archivo de salida), y
 escribe en este el nombre de la funcion y el resto de los campos
Funcion utilizada en el modulo:  'modulo_merge.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: hacer_cadena_invocaciones(dic, funcion, cadena, nivel, dic_lineas_cod
igo, lista_cadena)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe un dic con key funciones y de valor, una lista con las funciones a
 las que llama, una lista de las funciones q llama, recibe una funcion "BASE" y 
finalmente recibe "cadena" que es una lista a la que se agregaran las lineas a i
mprimir y un dic con la cantidad de lineas por funcion. Imprime un arbol de invo
caciones.
Funcion utilizada en el modulo:  'arbol_invocacion.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: hay_ayuda(linea)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe una linea de un archivo de comentarios.csv abierto y devuelve SI/N
O indicando que hay descripcion de uso de la funcion.]'

Funcion utilizada en el modulo:  'panel_general_funciones.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: imprimir_arbol_invocacion(dic, dic_lineas_codigo, main)

|INFORMACION|:
---------------
Autor: Miguel Lora
Ayuda: Recibe un dic = {funcion: lista de funciones invocadas} y un diccionario 
= {funcion: cantidad lineas de codigo}. Ejecuta una funcion recursiva la cual se
 encarga de imprimir por pantalla.
Funcion utilizada en el modulo:  'arbol_invocacion.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: imprimir_cabecera(largo)

|INFORMACION|:
---------------
Autor: Fabiola Siles
Ayuda: Recibe el largo, osea la cantidad de columnas que tiene que generar. Haci
endo uso del format, imprime la cabecera de la tabla.]'

Funcion utilizada en el modulo:  'analizador_reutilizacion_codigo.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: imprimir_info_desarrollador(total_lineas, dic_participacion)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe el total de lineas en todo el codigo y un diccionario(cargado medi
ante la funcion carga_dic_part) e imprime los datos del diccionario por pantalla
.]'

Funcion utilizada en el modulo:  'informacion_desarrollador.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: imprimir_lineas(dic_funcion_id, matriz)

|INFORMACION|:
---------------
Autor: Fabiola Siles
Ayuda: Recibe el diccionario funcion_id, el tama√±o (cantidad de funciones) y la
 matriz cargada con todos los datos. Imprime por pantalla el cuerpo.]'

Funcion utilizada en el modulo:  'analizador_reutilizacion_codigo.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: imprimir_todo(tama√±o, dic_funcion_id, matriz, ultima_fila)

|INFORMACION|:
---------------
Autor: Fabiola Siles
Ayuda: Recibe el tama√±o (cantidad de funciones), diccionario funcion_id, la mat
riz cargada con todos los datos, la ultima fila a agregar y el archivo de salida
. Realiza el proceso de ejecucion para imprimir por pantalla lo solicitado en el
 enunciado.]'

Funcion utilizada en el modulo:  'analizador_reutilizacion_codigo.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: imprimir_ultima_fila(ultima_fila, tama√±o)

|INFORMACION|:
---------------
Autor: Fabiola Siles
Ayuda: Recibe la ultima fila a imprimir y el tama√±o (cantidad de funciones). Im
prime por pantalla la ultima linea.]'

Funcion utilizada en el modulo:  'analizador_reutilizacion_codigo.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: leer(arch)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe un archivo y lee una linea de este]'

Funcion utilizada en el modulo:  'modulo_merge.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: leer_linea(archivo)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe un archivo abierto y devuelve la linea]'

Funcion utilizada en el modulo:  'generador_csv.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: leer_lineas(l_arch)

|INFORMACION|:
---------------
Autor: Tomas Yu Nakasone
Ayuda: Recibe una lista de archivos y retorna la primer linea que leyo de cada a
rchivo]'

Funcion utilizada en el modulo:  'modulo_merge.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: lista_de_funciones(fuente_unico)

|INFORMACION|:
---------------
Autor: Miguel Lora
Ayuda: Recibe una linea de fuente_unico.csv por parametro y devuelve una lista q
ue contiene los nombres de las funciones]'

Funcion utilizada en el modulo:  'consulta_funciones.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: lista_invoc_count(dic_inv_x, funcion)

|INFORMACION|:
---------------
Autor: Fabiola Siles
Ayuda: Recorro el dic_inv_x, el cual tiene una lista con los ID de las funciones
 invocadas (puede tener ids repetidas). Y cuenta las repeticiones de los id (que
 serian la cantidad de veces que se la invoca). Genero una lista de tuplas asi: 
[(id funcion, nro repeticiones), (..., ...)].]'

Funcion utilizada en el modulo:  'analizador_reutilizacion_codigo.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: lista_invocaciones(linea, lista_funciones)

|INFORMACION|:
---------------
Autor: Miguel Lora
Ayuda: Recibe una linea y una lista con las funciones q pueden aparecer, y te ar
ma una lista con las funciones q aparecen en la linea. Devuelve dicha lista.]'

Funcion utilizada en el modulo:  'arbol_invocacion.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: lista_invocaciones_id(linea, lista_funciones, dic_funcion_id)

|INFORMACION|:
---------------
Autor: Fabiola Siles
Ayuda: Recibe una linea, una lista con las funciones q pueden aparecer y el dicc
ionario_id_funcion. Te arma una lista con los ID de las funciones q aparecen en 
la linea. Devuelve dicha lista.
Funcion utilizada en el modulo:  'analizador_reutilizacion_codigo.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: lista_lineas_de_codigo(linea)

|INFORMACION|:
---------------
Autor: Carlos Medina
Ayuda: Recibe una linea de fuente_unico y abierta. Y devuelve una lista con las 
lineas de CODIGO (Sin espacios en blanco)
Funcion utilizada en el modulo:  'consulta_funciones.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: load_dic_lineas_codigo(fuente_unico)

|INFORMACION|:
---------------
Autor: Miguel Lora
Ayuda: Recibe una linea de un archivo de fuente_unico abierto y devuelve un dicc
ionario con funcion como clave y cantidad de lineas como valor.]'

Funcion utilizada en el modulo:  'arbol_invocacion.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: main_analizador(fuente_unico, salida)

|INFORMACION|:
---------------
Autor: Fabiola Siles
Ayuda: Realiza la linea de ejecucion a fin de cumplir con lo solicitado en el en
unciado.
Funcion utilizada en el modulo:  'analizador_reutilizacion_codigo.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: main_arbol_invocacion(fuente_unico, main)

|INFORMACION|:
---------------
Autor: Miguel Lora
Ayuda: Recibe un archivo, "fuente_unico", ya abierto y un string "main" el cual 
contiene el nombre de la funcion principal.]'

Funcion utilizada en el modulo:  'arbol_invocacion.py'

-----------------------------------------------

-----------------------------------------------
|Funcion|: main_consulta_funciones(fuente_unico, comentarios, arch_salida, lista
_funciones)

|INFORMACION|:
---------------
Autor: Carlos Medina
Ayuda: Recibe por parametros fuente_unico, camentarios, el archivo de salida, to
dos previamente abiertos y una lista con las funciones que hay. Pregunta que es 
lo que es usuario desea realizar y dependiendo de lo que eliga, ejecuta la funci
