carga_dic_invocaciones,'[Autor: Tomas Yu Nakasone]', '[Ayuda: Recibe una linea de un archivo de fuente_unico abierto y una lista con todas las funciones que hay. Devuelve un diccionario con clave: nombre de la funcion y de valor una lista con las funciones que invoca.]'
carga_lista_funciones,'[Autor: Tomas Yu Nakasone]', '[Ayuda: Recibe una linea de un archivo de fuente_unico abierto y devuelve una lista con las funciones que hay en ella.]'
contador_lineas,'[Autor: Tomas Yu Nakasone]', '[Ayuda: Recibe una linea de un archivo de fuente_unico abierto y devuelve la cantidad de lineas de codigo que hay en la funcion de esa linea.]', 'Elimino los espacios en blanco. Creo una lista vacia y meto los campos no vacios.'
gen_lista_lineas,'[Autor: Tomas Yu Nakasone]', '[Ayuda: Recibe una linea de un archivo de fuente_unico abierto y devuelve una lista con la seccion de las lineas de codigo como campos.]', 'La lista[1] va a tener todo lo que le sigue al modulo, osea el codigo.', 'lista_linea_codigo va a ser una lista con todo lo que le sigue al campo de modulo. Osea codigo puro'
hacer_cadena_invocaciones,'[Autor: Tomas Yu Nakasone]', '[Ayuda: Recibe un dic con key funciones y de valor, una lista con las funciones a las que llama, una lista de las funciones q llama, recibe una funcion "BASE" y finalmente recibe "cadena" que es una lista a la que se agregaran las lineas a imprimir y un dic con la cantidad de lineas por funcion. Imprime un arbol de invocaciones.]', 'El parametro lista_cadena es una lista que tiene listas que tienen las lineas a imprimir. La cree para luego ahcer que todas las listas anidadas tengan el mismo len, y asi poder crear un format con n parametros. Pero no me salio.', 'Uso las variables "nivel" para saber en que ciclo de la funcion estoy. Esto lo uso luego para saber con cuantos espacios en blanco rellenar al principio del array con las cadenas a imprimir y que quede ordenado.', 'lineas es = "(x cant lineas)"', 'Vuelvo a ciclar (recursividad) hasta que no entre en la condicion', 'Entra aca cuando la funcion ya no llama a otra funcion. Osea que termina.', 'Agrego los espacios en blanco al comienzo del array, dependiendo de cuantos ciclos ya realizo la funcion (nivel). Si es nivel 2, se agregan 2 espacion en blanco al comienzo de la lista.'
imprimir_arbol_invocacion,'[Autor: Tomas Yu Nakasone]', '[Ayuda: Recibe un dic = {funcion: lista de funciones invocadas} y un diccionario = {funcion: cantidad lineas de codigo}. Ejecuta una funcion recursiva la cual se encarga de imprimir por pantalla.]', 'No la puedo poner adentro de la funcion recursiva (ahcer_cadena_invocaciones) xq como es recursiva, se me va a borrar en cada iteracion que realice).', 'print(funcion + "\\n")', 'Lo uso para saber el "nivel" o cantidad de veces que la funcion recursiva se llama a si misma.', 'print(lista_cadena)'
lista_invocaciones,'[Autor: Tomas Yu Nakasone]', '[Ayuda: Recibe una linea y una lista con las funciones q pueden aparecer, y te arma una lista con las funciones q aparecen en la linea. Devuelve dicha lista.]'
load_dic_lineas_codigo,'[Autor: Tomas Yu Nakasone]', '[Ayuda: Recibe una linea de un archivo de fuente_unico abierto y devuelve un diccionario con funcion como clave y cantidad de lineas como valor.]'
main_arbol_invocacion,'[Autor: Tomas Yu Nakasone]', '[Ayuda: Recibe un archivo, "fuente_unico", ya abierto y un string "main" el cual contiene el nombre de la funcion principal.]'
