abrir_archivos,'(lista)', 'modulo_merge.py', 'rutas_arch_abiertos = []', 'for i in range(len(lista)):', 'rutas_arch_abiertos.append(open(lista[i], "r"))', 'return rutas_arch_abiertos', ''
cerrar_archivos,'(lista)', 'modulo_merge.py', 'for i in range(len(lista)):', 'lista[i].close()', ''
guardar,'(arch, nom_funcion, extras)', 'modulo_merge.py', 'datos_extras = []', '', 'for extra in extras:', 'datos_extras.append(str(extra))', 'extras_formato = ",".join(datos_extras)', 'arch.write(str(nom_funcion) + "," + extras_formato + "\\n")', ''
leer,'(arch)', 'modulo_merge.py', 'linea = arch.readline()', 'if linea:', 'devolver = linea.rstrip("\\n").split(",")       ', 'else:', 'devolver = (MAX_NOM_FUNCION, "fin")', 'return devolver', ''
leer_lineas,'(l_arch)', 'modulo_merge.py', 'lineas = []', 'for arch in l_arch:', 'linea = leer(arch)', 'lineas.append(linea)', 'return lineas', ''
main_modulo_merge,'(lista_funciones, lista_comentarios)', 'modulo_merge.py', '', '', 'rutas_arch_abiertos = abrir_archivos(lista_comentarios) ', 'salida = "comentarios.csv"', 'arch_salida = open(salida, "w")', '', 'merge(arch_salida, *rutas_arch_abiertos) ', '', 'arch_salida.close()', 'cerrar_archivos(rutas_arch_abiertos) ', '', '', 'rutas_arch_abiertos = abrir_archivos(lista_funciones) ', 'salida = "fuente_unico.csv"', 'arch_salida = open(salida, "w")', '', 'merge(arch_salida, *rutas_arch_abiertos)', '', '', 'arch_salida.close()', 'cerrar_archivos(rutas_arch_abiertos) ', '', '', '', '', '', ''
menor_funcion,'(lineas)', 'modulo_merge.py', 'dato_menor = min(lineas)', 'return dato_menor[0]', ''
merge,'(arch_salida, *archs_entrada)', 'modulo_merge.py', 'lineas = leer_lineas(archs_entrada)', 'menor = menor_funcion(lineas)', '', 'while menor < MAX_NOM_FUNCION:', 'for i in range(len(lineas)):', '', 'nom_funcion, *extras = lineas[i]', '', 'while nom_funcion == menor:', 'guardar(arch_salida, nom_funcion, extras)', 'nom_funcion, *extras = leer(archs_entrada[i])', '', 'lineas[i] = [nom_funcion, *extras]', '', 'menor = menor_funcion(lineas)', '', ''
